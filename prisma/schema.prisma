// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin{
  id String @id @default(cuid())
  username String @unique
  name String 
  email String @unique
  level String @default("None") @map("level"  )
  passwordHash String @map("password_hash")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  @@map("admin") // table ko name admins huna parxa
}

model User {
  id String @id @default(cuid())
  name String
  email String @unique
  passwordHash String @map("password_hash")
  address String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
cartItems CartItems[]

  @@map("users") // table ko name users huna parxa
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  description String?
  deletedAt DateTime?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")  

  products Product[]
  @@map("categories") // table ko name categories huna parxa

}

model Product {
  id String @id @default(cuid())
  name String
  description String?
  price Float
  status String
  categoryId Int? @map("category_id")
  category Category? @relation(fields: [categoryId], references: [id])  
  imageUrl String? @map("image_url")
  stock Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
cartItems CartItems[]

  @@map("products") // table ko name products huna parxa
}

model CartItems{
  id String @id @default(cuid())
  userId String @map("user_id")
  user User @relation(fields: [userId], references: [id])
  productId String @map("product_id")
  product Product @relation(fields: [productId], references: [id])
  quantity Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("cart_items") // table ko name cart_items huna parxa
}